name: Dockerfile

on:
  push:
    branches:
    - master
  pull_request:

# Prevent more than one build of this workflow for a branch to be running at the
# same time, and if multiple are queued, only run the latest, cancelling any
# already running build. The exception being any protected branch, such as
# master, where a build for every commit will run.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref_protected == 'true' && github.sha || github.ref }}
  cancel-in-progress: true

env:
  HEAD_SHA: ${{ github.event.pull_request.head.sha || github.sha }}
  IMAGE: ${{ format('{0}/{1}:{2}', secrets.DOCKERHUB_TOKEN && 'docker.io' || 'ghcr.io', github.repository, github.event_name == 'pull_request' && format('pr-{0}', github.event.pull_request.number) || 'latest') }}

jobs:
  complete:
    if: always()
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
      run: exit 1

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ env.HEAD_SHA }}
    - uses: docker/setup-buildx-action@5146db6c4d81fbfd508899f851bbb3883a96ff9f
    - name: Build System Test Image
      run: docker buildx build --no-cache -f Dockerfile -t $IMAGE --label org.opencontainers.image.revision="${{ env.HEAD_SHA }}" -o type=docker,dest=/tmp/image .
    - name: Upload System Test Image
      uses: actions/upload-artifact@v2
      with:
        name: image-Dockerfile
        path: /tmp/image

  push:
    # Push image to registry after build for pull requests from a local branch.
    if: ${{ github.ref_protected }} || ${{ github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository }}
    needs: build
    permissions:
      packages: write
      statuses: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ env.HEAD_SHA  }}
    - id: push
      uses: ./.github/actions/push
      with:
        head_sha: ${{ env.HEAD_SHA }}
        artifact_name: image-Dockerfile
        artifact_image_file: image
        image: ${{ env.IMAGE }}
        registry: ${{ secrets.DOCKERHUB_TOKEN && 'docker.io' || 'ghcr.io' }}
        username: ${{ secrets.DOCKERHUB_USERNAME || github.actor }}
        password: ${{ secrets.DOCKERHUB_TOKEN || github.token }}

  
