name: Dockerfile

on:
  push:
    branches:
      - master
  create:
    tags:      
  pull_request:
  release:
    types: [published]

# Prevent more than one build of this workflow for a branch to be running at the
# same time, and if multiple are queued, only run the latest, cancelling any
# already running build. The exception being any protected branch, such as
# master, where a build for every commit will run.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref_protected == 'true' && github.sha || github.ref }}
  cancel-in-progress: true

env:
  HEAD_SHA: ${{ github.event.pull_request.head.sha || github.sha }}
  IMAGE: ${{ format('{0}/{1}:{2}', secrets.DOCKERHUB_TOKEN && 'docker.io' || 'ghcr.io', github.repository,  github.event.ref || 'latest') }}
  CORE_GIT_REF: master
  CORE_COMPILE_CONFIGURE_FLAGS: "--disable-tests --enable-next-protocol-version-unsafe-for-production"
  SOROBAN_RPC_GIT_REF: main
  RUST_TOOLCHAIN_VERSION: stable
  SOROBAN_CLI_GIT_REF: main
  QUICKSTART_GIT_REF: master
jobs:
  complete:
    if: always()
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
      run: exit 1

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ env.HEAD_SHA }}
    - name: Build System Test Image
      run: |
        make CORE_GIT_REF=${{ env.CORE_GIT_REF }} \
             CORE_COMPILE_CONFIGURE_FLAGS="${{ env.CORE_COMPILE_CONFIGURE_FLAGS }}" \
             SOROBAN_RPC_GIT_REF=${{ env.SOROBAN_RPC_GIT_REF }} \
             RUST_TOOLCHAIN_VERSION=${{ env.RUST_TOOLCHAIN_VERSION }} \
             SOROBAN_CLI_GIT_REF=${{ env.SOROBAN_CLI_GIT_REF }} \
             QUICKSTART_GIT_REF=${{ env.QUICKSTART_GIT_REF }} build;
        docker save stellar/quickstart:dev -o /tmp/image;
    - name: Upload System Test Image
      uses: actions/upload-artifact@v2
      with:
        name: image-Dockerfile
        path: /tmp/image

  push:
    # Only push non 'vX.Y.Z' tags as pre-built system test image with versions compiled into image.
    # pr's and releases don't need to be pushed as docker images, because system test is meant to be built 
    # from source locally.
    if: (github.event_name == 'create' && github.event.ref_type == 'tag' && startsWith(github.event.ref, 'v') != true)
    needs: build
    permissions:
      packages: write
      statuses: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ env.HEAD_SHA  }}
    - id: push
      uses: ./.github/actions/push
      with:
        head_sha: ${{ env.HEAD_SHA }}
        artifact_name: image-Dockerfile
        artifact_image_file: image
        image: ${{ env.IMAGE }}
        registry: ${{ secrets.DOCKERHUB_TOKEN && 'docker.io' || 'ghcr.io' }}
        username: ${{ secrets.DOCKERHUB_USERNAME || github.actor }}
        password: ${{ secrets.DOCKERHUB_TOKEN || github.token }}

  
